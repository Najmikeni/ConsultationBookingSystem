// Generated by view binder compiler. Do not edit!
package com.example.groupproject557.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.groupproject557.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppointmentListItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView tvAppointmentDate;

  @NonNull
  public final TextView tvLectName;

  @NonNull
  public final TextView tvStatus;

  @NonNull
  public final TextView tvTime;

  private AppointmentListItemBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView tvAppointmentDate, @NonNull TextView tvLectName, @NonNull TextView tvStatus,
      @NonNull TextView tvTime) {
    this.rootView = rootView;
    this.tvAppointmentDate = tvAppointmentDate;
    this.tvLectName = tvLectName;
    this.tvStatus = tvStatus;
    this.tvTime = tvTime;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppointmentListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppointmentListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.appointment_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppointmentListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvAppointmentDate;
      TextView tvAppointmentDate = ViewBindings.findChildViewById(rootView, id);
      if (tvAppointmentDate == null) {
        break missingId;
      }

      id = R.id.tvLectName;
      TextView tvLectName = ViewBindings.findChildViewById(rootView, id);
      if (tvLectName == null) {
        break missingId;
      }

      id = R.id.tvStatus;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      id = R.id.tvTime;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      return new AppointmentListItemBinding((RelativeLayout) rootView, tvAppointmentDate,
          tvLectName, tvStatus, tvTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
